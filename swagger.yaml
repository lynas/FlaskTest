swagger: '2.0'
info:
  description: 'Flask mongo template project [http://swagger.io](http://swagger.io) `Enjoy`'
  version: 1.0.0
  title: Flask Mongo
  termsOfService: 'http://dsinnovators.com/'
  contact:
    email: sazzad.islam@dsnnovators.com
  license:
    name: Private
    url: 'http://dsinnovators.com/'
host: dsnnovators.com
basePath: /v1
schemes:
  - http
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Authentication of app
      description: ''
      operationId: loginUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Authentication information that needed to be provided by user
          required: true
          schema:
            $ref: '#/definitions/UserLogin'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Username or pasword not correct
        '405':
          description: Invalid input
  /auth/register:
    post:
      tags:
        - auth
      summary: Authentication of app
      description: ''
      operationId: registerUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Authentication information that needed to be provided by user
          required: true
          schema:
            $ref: '#/definitions/UserRegister'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/General'
        '405':
          description: Invalid input
  /app_users:
    get:
      tags:
        - app_users
      summary: app_users
      description: ''
      operationId: app_users
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AppUser'
        '400':
          description: Username or pasword not correct
        '405':
          description: Invalid input
      security:
        - app_auth:
            - write
            - read
securityDefinitions:
  app_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      write: write data
      read: read data
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  AppUser:
    type: object
    properties:
      _id:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      age:
        type: integer
  General:
    type: object
    properties:
      success:
        type: boolean
  UserLogin:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  UserRegister:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
      password:
        type: string
  LoginResponse:
    type: object
    properties:
      success:
        type: boolean
      token:
        type: string
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      petId:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
      complete:
        type: boolean
        default: false
    xml:
      name: Order
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  Pet:
    type: object
    required:
      - name
      - photoUrls
    properties:
      id:
        type: integer
        format: int64
      category:
        $ref: '#/definitions/Category'
      name:
        type: string
        example: doggie
      photoUrls:
        type: array
        xml:
          name: photoUrl
          wrapped: true
        items:
          type: string
      tags:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Tag'
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold
    xml:
      name: Pet
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
